name: docker

on:
  workflow_call:
    inputs:
      ref-name:
        required: true
        type: string
      ref-type:
        required: true
        # choice: branch | tag
        type: string
    secrets:
      CI_BOT_APP_ID:
        required: true
      CI_BOT_PRIVATE_KEY:
        required: true
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      ref-name:
        description: 'Name of branch/tag'
        required: true
        type: string
      ref-type:
        required: true
        type: choice
        options:
          - branch
          - tag
      push:
        description: 'Push images to registries'
        default: false
        type: boolean

env:
  DEBIAN_CODENAME: bookworm
  REGISTRIES: >-
    docker.io
  PLATFORMS: >-
    linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref-name }}
      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          # See https://github.com/docker/build-push-action/issues/654#issuecomment-1285190151
          buildkitd-config-inline: |
            [worker.oci]
              max-parallelism = 1
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare tags (debian)
        id: debian-tags
        run: >-
          ./scripts/ghci-docker-tags ${{ inputs.ref-type }} ${{ inputs.ref-name }} debian
      - name: Build and push (mirakc/mirakc:debian*)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            DEBIAN_CODENAME=${{ env.DEBIAN_CODENAME }}
            TOOLS_TAG=${{ steps.debian-tags.outputs.tools-tag }}
          target: mirakc-debian
          platforms: ${{ env.PLATFORMS }}
          tags: >-
            ${{ format(steps.debian-tags.outputs.tags, 'docker.io/mirakc/mirakc') }},
          cache-from: |
            type=local,src=/tmp/.docker-cache
          cache-to: |
            type=local,dest=/tmp/.docker-cache
          push: ${{ inputs.push }}
      - name: Build and push (mirakc/timeshift-fs:debian*)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            DEBIAN_CODENAME=${{ env.DEBIAN_CODENAME }}
            TOOLS_TAG=${{ steps.debian-tags.outputs.tools-tag }}
          target: timeshift-fs-debian
          platforms: ${{ env.PLATFORMSS }}
          tags: >-
            ${{ format(steps.debian-tags.outputs.tags, 'docker.io/mirakc/timeshift-fs') }},
          cache-from: |
            type=local,src=/tmp/.docker-cache
          cache-to: |
            type=local,dest=/tmp/.docker-cache
          push: ${{ inputs.push }}
      - name: Prepare tags (alpine)
        id: alpine-tags
        run: >-
          ./scripts/ghci-docker-tags ${{ inputs.ref-type }} ${{ inputs.ref-name }} alpine
      - name: Build and push (mirakc/mirakc:alpine*)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            DEBIAN_CODENAME=${{ env.DEBIAN_CODENAME }}
            TOOLS_TAG=${{ steps.alpine-tags.outputs.tools-tag }}
          target: mirakc-alpine
          platforms: ${{ env.PLATFORMS }}
          tags: >-
            ${{ format(steps.alpine-tags.outputs.tags, 'docker.io/mirakc/mirakc') }},
          cache-from: |
            type=local,src=/tmp/.docker-cache
          cache-to: |
            type=local,dest=/tmp/.docker-cache
          push: ${{ inputs.push }}
      - name: Build and push (mirakc/timeshift-fs:alpine*)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            DEBIAN_CODENAME=${{ env.DEBIAN_CODENAME }}
            TOOLS_TAG=${{ steps.alpine-tags.outputs.tools-tag }}
          target: timeshift-fs-alpine
          platforms: ${{ env.PLATFORMSS }}
          tags: >-
            ${{ format(steps.alpine-tags.outputs.tags, 'docker.io/mirakc/timeshift-fs') }},
          cache-from: |
            type=local,src=/tmp/.docker-cache
          cache-to: |
            type=local,dest=/tmp/.docker-cache
          push: ${{ inputs.push }}
      - name: Test
        if: ${{ inputs.push }}
        run: >-
          ./scripts/ghci-docker-test
          ${{ inputs.ref-name }} "$REGISTRIES" "$(echo $PLATFORMS | tr ',' ' ')"

  trigger:
    if: ${{ inputs.push }}
    needs:
      - docker
    runs-on: ubuntu-latest
    steps:
      # Use the `mirakc-ci` bot account in order to trigger the docker workflow
      # on mirakc/docker-timeshift-x.
      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.CI_BOT_APP_ID }}
          private_key: ${{ secrets.CI_BOT_PRIVATE_KEY }}
      - name: Trigger the docker workflow on mirakc/docker-timeshift-x
        run: |
          echo '${{ steps.generate-token.outputs.token }}' | gh auth login --with-token
          echo '{"version": "${{ inputs.ref-name }}"}' | gh workflow run docker.yml -R mirakc/docker-timeshift-x --json
