name: build

on:
  workflow_call:

jobs:
  build:
    strategy:
      matrix:
        runner:
          - macos-latest
          - ubuntu-latest
        rust:
          - stable
          #- nightly
    runs-on: ${{ matrix.runner }}
    continue-on-error: ${{ matrix.runner == 'macos-latest' }}  # macOS is unsupported officially
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Install macfuse (macos)
        if: matrix.runner == 'macos-latest'
        run: |
          brew install macfuse
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: 'clippy, rustfmt'
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-deny
      - uses: taiki-e/install-action@nextest
      - name: Check
        run: make check
      - name: Build
        run: |
          cargo build -v --release
      - name: Run tests
        run: |
          cargo nextest run --release --all-features
        env:
          RUST_LOG: debug
      - name: Tests for OpenAPI document
        run: |
          # TODO(ci): enable recording/timeshift features
          cat <<EOF >config.yml
          resource:
            strings-yaml: resources/strings.yml
          EOF
          cargo run -r --bin=mirakc -- -c config.yml openapi openapi.json
          # openapi-generator-cli
          npx @openapitools/openapi-generator-cli generate -i openapi.json \
            -g rust -o mirakc-client --package-name mirakc-client
          # TODO: add more tests if needed
